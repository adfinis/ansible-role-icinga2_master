#!/usr/bin/env bash
#
# Adfinis SyGroup AG
# https://github.com/adfinis-sygroup/ansible-role-icinga2_master
#
# This script trigger service SMS notifications using Twilio
#
# {{ ansible_managed }}

account_sid="{{ icinga2_master_twilio_account_sid }}"
auth_token="{{ icinga2_master_twilio_auth_token }}"
phone_number="{{ icinga2_master_twilio_sms_from }}"

PROG=${0##*/}

## Function helpers
Usage() {
cat << EOF

Required parameters:
  -d LONGDATETIME (\$icinga.long_date_time\$)
  -e SERVICENAME (\$service.name\$)
  -l HOSTNAME (\$host.name\$)
  -n HOSTDISPLAYNAME (\$host.display_name\$)
  -o SERVICEOUTPUT (\$service.output\$)
  -r USERPHONE (\$user.pager\$)
  -s SERVICESTATE (\$service.state\$)
  -t NOTIFICATIONTYPE (\$notification.type\$)
  -u SERVICEDISPLAYNAME (\$service.display_name\$)

Optional parameters:
  -i ICINGAWEB2URL (\$notification_icingaweb2url\$, Default: unset)
  -v (\$notification_sendtosyslog\$, Default: false)
  -X EXTRA_DATA (\$notification_extradata\$, Default: unset)

EOF
}

Help() {
  Usage
  exit 0
}

Error() {
  if [ "$1" ] ; then
    echo "$1"
  fi
  Usage
  exit 1
}

{% raw %}
urlencode() {
  local LANG=C i c e=''
  for ((i=0;i<${#1};i++)); do
    c=${1:$i:1}
    [[ "$c" =~ [a-zA-Z0-9\.\~\_\-] ]] || printf -v c '%%%02X' "'$c"
    e+="$c"
  done
  echo "$e"
}
{% endraw %}

## Main
EXTRA_DATA=
while getopts d:e:hi:l:n:o:r:s:t:u:v:X: opt
do
  case "$opt" in
    d) LONGDATETIME=$OPTARG ;; # required
    e) SERVICENAME=$OPTARG ;; # required
    h) Usage ;;
    i) ICINGAWEB2URL=$OPTARG ;;
    l) HOSTNAME=$OPTARG ;; # required
    n) HOSTDISPLAYNAME=$OPTARG ;; # required
    o) SERVICEOUTPUT=$OPTARG ;; # required
    r) USERPHONE=$OPTARG ;; # required
    s) SERVICESTATE=$OPTARG ;; # required
    t) NOTIFICATIONTYPE=$OPTARG ;; # required
    u) SERVICEDISPLAYNAME=$OPTARG ;; # required
    v) VERBOSE=$OPTARG ;;
    X) EXTRA_DATA=$OPTARG ;;
   \?) echo "ERROR: Invalid option -$OPTARG" >&2
       Usage ;;
    :) echo "Missing option argument for -$OPTARG" >&2
       Usage ;;
    *) echo "Unimplemented option: -$OPTARG" >&2
       Usage ;;
  esac
done

shift $((OPTIND - 1))

## Keep formatting in sync with mail-host-notification.sh
for P in LONGDATETIME HOSTNAME HOSTDISPLAYNAME SERVICENAME SERVICEDISPLAYNAME SERVICESTATE USERPHONE NOTIFICATIONTYPE ; do
  eval "PAR=\$${P}"

  if [ ! "$PAR" ] ; then
    Error "Required parameter '$P' is missing."
  fi
done

if [ -z "${SERVICEOUTPUT}" ]; then
  SERVICEOUTPUT="no output"
fi

## Build the message's subject
SUBJECT="[$NOTIFICATIONTYPE] $SERVICEDISPLAYNAME on $HOSTDISPLAYNAME is $SERVICESTATE!"

## Build the notification message
NOTIFICATION_MESSAGE=$(cat << EOF
[$SERVICESTATE] $HOSTDISPLAYNAME: $SERVICEDISPLAYNAME 
$SERVICEOUTPUT
EOF
)

## Check whether Icinga Web 2 URL was specified.
if [ -n "$ICINGAWEB2URL" ] ; then
  LONGURL="${ICINGAWEB2URL}/icingadb/service?name=$(urlencode "$SERVICENAME")%26host.name=$(urlencode "$HOSTNAME")"
  SHORTURL=$({{ icinga2_master_twilio_shorturl_cmd }})

  if [ ! -z ${SHORTURL} ]; then
    NOTIFICATION_MESSAGE="$NOTIFICATION_MESSAGE
${SHORTURL}"
  else
    NOTIFICATION_MESSAGE="$NOTIFICATION_MESSAGE
${LONGURL}"
  fi
fi

## Check whether verbose mode was enabled and log to syslog.
if [ "$VERBOSE" == "true" ] ; then
  logger "$PROG sends $SUBJECT => $USERPHONE"
fi

curl -s -X POST -u "${account_sid}:${auth_token}" \
  -d "Body=${NOTIFICATION_MESSAGE}" \
  -d "From=${phone_number}" \
  -d "To=${USERPHONE}" \
  "https://api.twilio.com/2010-04-01/Accounts/${account_sid}/Messages"

{% for line in icinga2_master_twilio_sms_additional_commands %}
{{ line }}
{% endfor %}
